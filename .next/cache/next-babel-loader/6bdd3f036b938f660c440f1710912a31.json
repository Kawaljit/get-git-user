{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/kawsingh/Projects/myprojects/get-git-user/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useRef, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../components/layout';\nimport User from '../components/user';\nimport Lookup from '../components/lookup';\n\nfunction Index() {\n  var _useState = useState(''),\n      searchText = _useState[0],\n      setSearchText = _useState[1];\n\n  var _useState2 = useState(null),\n      userData = _useState2[0],\n      setUserData = _useState2[1];\n\n  var isInitialMount = useRef(true);\n  useEffect(function () {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else {\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response, user;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"https://api.github.com/users/\".concat(searchText));\n\n              case 2:\n                response = _context.sent;\n                _context.next = 5;\n                return response.json();\n\n              case 5:\n                user = _context.sent;\n                setUserData(user);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  }, [searchText]);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(Lookup, {\n    setSearchText: setSearchText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), userData && __jsx(User, {\n    userData: userData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }));\n}\n\nexport default Index;","map":{"version":3,"sources":["/Users/kawsingh/Projects/myprojects/get-git-user/pages/index.js"],"names":["useState","useRef","useEffect","fetch","Layout","User","Lookup","Index","searchText","setSearchText","userData","setUserData","isInitialMount","current","response","json","user"],"mappings":";;;;;AACA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAGA,SAASC,KAAT,GAAiB;AAAA,kBAIXP,QAAQ,CAAC,EAAD,CAJG;AAAA,MAEbQ,UAFa;AAAA,MAGbC,aAHa;;AAAA,mBASXT,QAAQ,CAAC,IAAD,CATG;AAAA,MAObU,QAPa;AAAA,MAQbC,WARa;;AAWf,MAAMC,cAAc,GAAGX,MAAM,CAAC,IAAD,CAA7B;AAEAC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIU,cAAc,CAACC,OAAnB,EAA4B;AAC1BD,MAAAA,cAAc,CAACC,OAAf,GAAyB,KAAzB;AACD,KAFD,MAEO;AACL;AAAA;AAAA,+BAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACwBV,KAAK,wCAAiCK,UAAjC,EAD7B;;AAAA;AACOM,gBAAAA,QADP;AAAA;AAAA,uBAEoBA,QAAQ,CAACC,IAAT,EAFpB;;AAAA;AAEOC,gBAAAA,IAFP;AAGCL,gBAAAA,WAAW,CAACK,IAAD,CAAX;;AAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD;AAKD;AACF,GAVQ,EAUN,CAACR,UAAD,CAVM,CAAT;AAYA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,aAAa,EAAEC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGC,QAAQ,IAAI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEA,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFf,CADF;AAMD;;AAED,eAAeH,KAAf","sourcesContent":["\nimport { useState, useRef, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../components/layout';\nimport User from '../components/user';\nimport Lookup from '../components/lookup';\n\n\nfunction Index() {\n  const [\n    searchText,\n    setSearchText\n  ] = useState('');\n\n  const [\n    userData,\n    setUserData\n  ] = useState(null);\n\n  const isInitialMount = useRef(true);\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else {\n      (async () => {\n        const response = await fetch(`https://api.github.com/users/${searchText}`);\n        const user = await response.json();\n        setUserData(user);\n      })();\n    }\n  }, [searchText]);\n\n  return (\n    <Layout >\n      <Lookup setSearchText={setSearchText} />\n      {userData && <User userData={userData} />}\n    </Layout>\n  );\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}