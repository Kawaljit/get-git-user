{"ast":null,"code":"var _jsxFileName = \"/Users/kawsingh/Projects/myprojects/get-git-user/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useRef, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../components/layout';\nimport User from '../components/user';\nimport Lookup from '../components/lookup';\n\nfunction Index() {\n  const {\n    0: searchText,\n    1: setSearchText\n  } = useState('');\n  const {\n    0: userData,\n    1: setUserData\n  } = useState(null);\n  const isInitialMount = useRef(true);\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else {\n      const user = fetch(`https://api.github.com/users/${searchText}`).then(response => response.json());\n      setUserData(user);\n    }\n  }, [searchText]);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(Lookup, {\n    setSearchText: setSearchText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), console.log(userData), userData && __jsx(User, {\n    userData: userData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), __jsx(_JSXStyle, {\n    id: \"3991207765\",\n    __self: this\n  }, \"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9rYXdzaW5naC9Qcm9qZWN0cy9teXByb2plY3RzL2dldC1naXQtdXNlci9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvQ2tCIiwiZmlsZSI6Ii9Vc2Vycy9rYXdzaW5naC9Qcm9qZWN0cy9teXByb2plY3RzL2dldC1naXQtdXNlci9wYWdlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgdXNlU3RhdGUsIHVzZVJlZiwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCc7XG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvbGF5b3V0JztcbmltcG9ydCBVc2VyIGZyb20gJy4uL2NvbXBvbmVudHMvdXNlcic7XG5pbXBvcnQgTG9va3VwIGZyb20gJy4uL2NvbXBvbmVudHMvbG9va3VwJztcblxuXG5mdW5jdGlvbiBJbmRleCgpIHtcbiAgY29uc3QgW1xuICAgIHNlYXJjaFRleHQsXG4gICAgc2V0U2VhcmNoVGV4dFxuICBdID0gdXNlU3RhdGUoJycpO1xuXG4gIGNvbnN0IFtcbiAgICB1c2VyRGF0YSxcbiAgICBzZXRVc2VyRGF0YVxuICBdID0gdXNlU3RhdGUobnVsbCk7XG5cbiAgY29uc3QgaXNJbml0aWFsTW91bnQgPSB1c2VSZWYodHJ1ZSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoaXNJbml0aWFsTW91bnQuY3VycmVudCkge1xuICAgICAgaXNJbml0aWFsTW91bnQuY3VycmVudCA9IGZhbHNlO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCB1c2VyID0gZmV0Y2goYGh0dHBzOi8vYXBpLmdpdGh1Yi5jb20vdXNlcnMvJHtzZWFyY2hUZXh0fWApXG4gICAgICAudGhlbigocmVzcG9uc2UpID0+IHJlc3BvbnNlLmpzb24oKSk7XG4gICAgICBzZXRVc2VyRGF0YSh1c2VyKTtcbiAgICB9XG4gIH0sIFtzZWFyY2hUZXh0XSk7XG5cbiAgcmV0dXJuIChcbiAgICA8TGF5b3V0ID5cbiAgICAgIDxMb29rdXAgc2V0U2VhcmNoVGV4dD17c2V0U2VhcmNoVGV4dH0gLz5cbiAgICAgIHtjb25zb2xlLmxvZyh1c2VyRGF0YSl9XG4gICAgICB7dXNlckRhdGEgJiYgPFVzZXIgdXNlckRhdGE9e3VzZXJEYXRhfSAvPn1cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICBcbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L0xheW91dD5cbiAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgSW5kZXg7Il19 */\\n/*@ sourceURL=/Users/kawsingh/Projects/myprojects/get-git-user/pages/index.js */\"));\n}\n\nexport default Index;","map":{"version":3,"sources":["/Users/kawsingh/Projects/myprojects/get-git-user/pages/index.js"],"names":["useState","useRef","useEffect","fetch","Layout","User","Lookup","Index","searchText","setSearchText","userData","setUserData","isInitialMount","current","user","then","response","json","console","log"],"mappings":";;;;AACA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAGA,SAASC,KAAT,GAAiB;AACf,QAAM;AAAA,OACJC,UADI;AAAA,OAEJC;AAFI,MAGFT,QAAQ,CAAC,EAAD,CAHZ;AAKA,QAAM;AAAA,OACJU,QADI;AAAA,OAEJC;AAFI,MAGFX,QAAQ,CAAC,IAAD,CAHZ;AAKA,QAAMY,cAAc,GAAGX,MAAM,CAAC,IAAD,CAA7B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,cAAc,CAACC,OAAnB,EAA4B;AAC1BD,MAAAA,cAAc,CAACC,OAAf,GAAyB,KAAzB;AACD,KAFD,MAEO;AACL,YAAMC,IAAI,GAAGX,KAAK,CAAE,gCAA+BK,UAAW,EAA5C,CAAL,CACZO,IADY,CACNC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADP,CAAb;AAEAN,MAAAA,WAAW,CAACG,IAAD,CAAX;AACD;AACF,GARQ,EAQN,CAACN,UAAD,CARM,CAAT;AAUA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,aAAa,EAAEC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGS,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAFH,EAGGA,QAAQ,IAAI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEA,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHf;AAAA;AAAA;AAAA,wsDADF;AAUD;;AAED,eAAeH,KAAf","sourcesContent":["\nimport { useState, useRef, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../components/layout';\nimport User from '../components/user';\nimport Lookup from '../components/lookup';\n\n\nfunction Index() {\n  const [\n    searchText,\n    setSearchText\n  ] = useState('');\n\n  const [\n    userData,\n    setUserData\n  ] = useState(null);\n\n  const isInitialMount = useRef(true);\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else {\n      const user = fetch(`https://api.github.com/users/${searchText}`)\n      .then((response) => response.json());\n      setUserData(user);\n    }\n  }, [searchText]);\n\n  return (\n    <Layout >\n      <Lookup setSearchText={setSearchText} />\n      {console.log(userData)}\n      {userData && <User userData={userData} />}\n      <style jsx>{`\n          \n      `}</style>\n    </Layout>\n  );\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}